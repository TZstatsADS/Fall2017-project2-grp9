}
theta.star <- rexp(1, lambda)
theta.star <- rexp(1, lambda)
theta.star <- rexp(1, lambda)
theta.star <- rexp(1, lambda)
theta.star <- rexp(1, lambda)
theta.star <- rexp(1, lambda)
(1-lambda)
(theta0 - theta.star)
r <- exp( (1-lambda) * (theta0 - theta.star) )
if(runif(1) < r){ theta0 <- theta.star }
if(runif(1) < r){ theta0 <- theta.star }
theta0
theta.star <- rnorm(1, theta0, sigma)
rm(list=ls())
x <- c(1/2,1/2,1/2,1/2)
logx
log(x)
-sum(log(x))
-sum(0.5*log(x))
-sum(0.5*log(x))
0.5*log(x)
y <- c(1/3,1/3,1/3,1/3)
-sum(0.5*log(y))
-sum((1/3)*log(y))
log(y)
log(1)
?log
-sum(0.5*log(x, base = 2))
-sum((1/3)*log(y, base = 2))
log(1, base = 2)
-sum(0.5*log(x, base = 2))
x<- c(0,1)
-sum(0.5*log(x, base = 2))
x<- c(1,1)
-sum(0.5*log(x, base = 2))
x <- c(0.5,0.5)
-sum(0.5*log(x, base = 2))
log(x, base = 2
)
log(2, base = 2)
-sum(0.5*log(x, base = 2))
1/1296
factorial(4)^3
factorial(4)^3/factorial(23)
factorial(4)^3/factorial(12)
1/choose(12,36)
choose(12,36)
choose(36,12)
1/choose(36,12)
1296/12
1296/36
36*36
factorial(4)
factorial(4)^3
factorial(4)^2
factorial(4)^2*2
factorial(3)^3
0.107/0.893
0.893/0.107
(0.724/0.0045)/(0.9955/0.0274)
rm(list=ls())
rm(list=ls())
chain.length <- 2000;
J <- 4
yA <- c(62, 60, 63, 59)
yB <- c(63, 67, 71, 64, 65, 66)
yC <- c(68, 66, 71, 67, 68, 68)
yD <- c(56, 62, 60, 61, 63, 64, 63, 59)
n <- c(length(yA), length(yB), length(yC), length(yD))
ybar <- c(mean(yA), mean(yB), mean(yC), mean(yD))
s2 <- c(var(yA), var(yB), var(yC), var(yD))
rm(yA, yB, yC, yD)
theta.update <- function(mu, sigma2, tau2, J, n, ybar)
{
V.theta <- 1 / (1/tau2 + n/sigma2)
theta.hat <- V.theta * (mu/tau2 + n*ybar/sigma2)
rnorm(J, theta.hat, sqrt(V.theta))
}
mu.update <- function(theta, tau2, J)
{
mu.hat <- mean(theta)
rnorm(1, mu.hat, sqrt(tau2/J))
}
sigma2.update <- function(theta, ybar, s2)
{
sigma2.hat <- sum((n-1)*s2 + n*(ybar-theta)^2) / sum(n)
sum(n) * sigma2.hat / rchisq(1, df=sum(n))
}
tau2.update <- function(J, theta, mu)
{
tau2.hat <- sum((theta-mu)^2) / (J-1)
(J-1) * tau2.hat / rchisq(1, df=J-1)
}
build.chain <- function(chain.length, theta, mu, sigma2, tau2, J, n, y, s2)
{
N <- chain.length
theta.chain <- matrix(rep(NA, N*J), N, J)
mu.chain <- rep(NA, N); sigma2.chain <- rep(NA, N); tau2.chain <- rep(NA, N);
for(t in 1:N)
{
theta <- theta.update(mu, sigma2, tau2, J, n, ybar)
mu <- mu.update(theta, tau2, J)
sigma2 <- sigma2.update(theta, ybar, s2)
tau2 <- tau2.update(J, theta, mu)
theta.chain[t,] <- theta; mu.chain[t] <- mu;
sigma2.chain[t] <- sigma2; tau2.chain[t] <- tau2;
}
list(theta.chain=theta.chain, mu.chain=mu.chain,
sigma2.chain=sigma2.chain, tau2.chain=tau2.chain)
}
N <- chain.length
theta.chain <- matrix(rep(NA, N*J), N, J)
mu.chain <- rep(NA, N); sigma2.chain <- rep(NA, N); tau2.chain <- rep(NA, N);
theta <- theta.update(mu, sigma2, tau2, J, n, ybar)
ybar
theta <- ybar; mu <- mean(theta);
mean(s2)
var(ybar)
sigma2 <- mean(s2); tau2 <- var(ybar);
theta <- theta.update(mu, sigma2, tau2, J, n, ybar)
mu <- mu.update(theta, tau2, J)
sigma2 <- sigma2.update(theta, ybar, s2)
theta.chain[t,] <- theta; mu.chain[t] <- mu;
View(theta.chain)
t<-1
theta.chain[t,] <- theta; mu.chain[t] <- mu;
sigma2.chain[t] <- sigma2; tau2.chain[t] <- tau2;
sigma2.hat <- sum((n-1)*s2 + n*(ybar-theta)^2) / sum(n)
(n-1)*s2
ybar-theta
n*(ybar-theta)
n*(ybar-theta)^2
(n-1)*s2
(n-1)*s2 + n*(ybar-theta)^2
(n-1)
(n-1)*s2
theta <- ybar; mu <- mean(theta);
sigma2 <- mean(s2); tau2 <- var(ybar);
foo <- build.chain(chain.length, theta, mu, sigma2, tau2, J, n, y, s2)
theta.chain <- foo$theta.chain; mu.chain <- foo$mu.chain;
sigma2.chain <- foo$sigma2.chain; tau2.chain <- foo$tau2.chain;
rm(foo)
Results <- matrix(rep(NA, (J+3)*5), J+3, 5)
quantiles <- c(.025, .25, .50, .75, .975)
for(j in 1:J)
{
Results[j,] <- quantile(theta.chain[,j], quantiles)
}
Results[J+1, ] <- quantile(mu.chain, quantiles)
Results[J+2, ] <- sqrt(quantile(sigma2.chain, quantiles))
Results[J+3, ] <- sqrt(quantile(tau2.chain, quantiles))
rownames(Results) <- c(paste("theta",1:J, sep=""), "mu", "sigma", "tau")
colnames(Results) <- paste(quantiles*100, "pct", sep="")
round(Results,1)
View(Results)
View(Results)
View(Results)
V.theta <- 1 / (1/tau2 + n/sigma2)
1 / (1/tau2 + n/sigma2)
theta.hat <- V.theta * (mu/tau2 + n*ybar/sigma2)
V.theta * (mu/tau2 + n*ybar/sigma2)
rnorm(J, theta.hat, sqrt(V.theta))
mean(theta)
rnorm(1, mu.hat, sqrt(tau2/J))
mu.hat <- mean(theta)
rnorm(1, mu.hat, sqrt(tau2/J))
sigma2.hat <- sum((n-1)*s2 + n*(ybar-theta)^2) / sum(n)
sum(n) * sigma2.hat / rchisq(1, df=sum(n))
n*(ybar-theta)^2
n*(ybar-theta)^2
(n-1)*s2
(n-1)*s2 + n*(ybar-theta)^2
acf(mu.chain)
acf(sigma2.chain)
acf(tau2.chain)
acf(theta.chain)
0.4/0.53
1-0.4/0.53
0.352/(0.352+0.242)
1-0.352/(0.352+0.242)
0.242/(0.242+0.352)
0.004/(0.004+0.123)
(0.5*0.755+1*0.59)/(0.755+0.59)
(1.5*0.59+3.5*0.97)/(0.59+0.97)
((0.5-0.72)^2*0.755+(1-0.72)^2*0.59)/(0.755+0.59)
((1.5-2.74)^2*0.59+(3.5-2.74)^2*0.97)/(0.97+0.59)
sqrt(((1.5-2.74)^2*0.59+(3.5-2.74)^2*0.97)/(0.97+0.59))
sqrt(((0.5-0.72)^2*0.755+(1-0.72)^2*0.59)/(0.755+0.59))
(0.755+0.59)/(0.755+0.59+0.41+0.03)
(0.755+0.59+0.41+0.03)
(0.755+0.59+0.41+0.03)
(0.245+0.59+0.41+0.97)
(0.245+0.59+0.41+0.97)/((0.755+0.59+0.41+0.03)+(0.245+0.59+0.41+0.97))
mean(0.755,0.59,0.41,0.03)
x <- matrix(c(1,0,0,0.5,0.5,0,0.2,0.2,0.6))
x
x <- matrix(c(1,0,0,0.5,0.5,0,0.2,0.2,0.6), nrow = 3)
x
(1-0.01)*x
(1-0.01)*x + 0.01/3 * matrix(nrow=3,rep(1,9))
y<- (1-0.01)*x + 0.01/3 * matrix(nrow=3,rep(1,9))
y
y %*% y
y %*% y %*% y %*% y %*% y %*% y %*% y
y %*% y %*% y %*% y %*% y %*% y %*% y %*% y %*% y %*% y %*% y %*% y %*% y %*% y %*% y %*% y %*% y %*% y %*% y %*% y
1.95/sqrt(400)
matrix(c(1.2,1.2*0.5,1.2*.5,1.2),2)
solve(matrix(c(1.2,1.2*0.5,1.2*.5,1.2),2))
solve(matrix(c(1.2,1.2*0.5,1.2*.5,1.2),2)) %*% matrix(c(0.6,0.48))
20*0.81
20-16.2
3.8/1.25
curve(1/(1=exp(-x)), from = 0.1, to 5)
curve(1/(1=exp(-x)), from = 0.1, to 1)
curve(1/(1=exp(-x)), from = 1, to 1)
x <- seq(from = 0.01, to = 1, by = 0.01)
curve(1/(1=exp(-x)), from = 1, to 1)
plot(1/(1=exp(-x)))
(1/(1=exp(-x))
)
x
curve(1/(1+exp(-x)), from = 1, to 1)
plot(1/(1+exp(-x)))
x <- seq(from = -5, to = 5, by = 0.01)
plot(1/(1+exp(-x)))
1/(1+exp(-x))
?eigen
matrix(c(0.5,0.25,0.25))
eigen(matrix(c(0.5,0.25,0.25)))
eigen(matrix(rep(c(0.5,0.25,0.25),3), 3, 3))
eigen(matrix(rep(5*c(0.5,0.25,0.25),3), 3, 3))
eigen(matrix(rep(c(0.5,0.25,0.25),3), 3, 3))
0.22/0.25
0.01/0.15
0.17/0.23
0.02/0.16
0.88+0.067+0.74+0.125+0.53
2.35/5
21/12
1/(2*sqrt(0.16))
1.25/2.25
5/9
0.5*0.35/0.65
0.8*0.3/0.65
0.27/(0.27+0.37)
15.7*.9
34.8*0.65
20.3*.65
20.3*.65*.9
(20.3-1)*.65*.9
(20.3-1)*.65
(34.8-1)*0.65
0.9*15.7+0.1*33.8
15.8*0.9+20.6*0.1
?t
?rt
rt(25, 24, 8)
x <- rt(25, 24, 8)
x
y <- x - (max(x)-10)
y
x <- rt(25, 50, 8)
x
mean(y)
y <- x - (max(x)-10)
mean(y)
y
sqrt(50/2)
sqrt(5)/2
sqrt(5)/2*(1/0.61)
sqrt(5)/2*(1/1.61)
sqrt(5)/2*(1/0.62)
-(1-sqrt(5)/(2*0.61))
-1+sqrt(5)
(-1+sqrt(5))/2
6.06^2
6.06^2*0.687
solve(matrix(c(1,0.687,0.687,1),2,2))
matrix(c(1,0.687,0.687,1),2,2)
1.8938*0.687-1.301*0.687^2
1.96*(sqrt(200))
1.96/(sqrt(200))
solve(matrix(c(1,0.427,0.427,1),2,2))
solve(matrix(c(0.427,0.475),2,2)) %*% matrix(c(1,0.427,0.427,1),2,1)
matrix(c(1,0.427,0.427,1),2,1)
solve(matrix(c(1,0.427,0.427,1),2,2)) %*% matrix(c(0.427,0.487),2,1)
1.15-0.2679*0.427*1.15-0.3726*0.487*1.15
1-0.427^2
1/(1-0.427^2)
-0.427/(1-0.427^2)
1-0.2678-0.3726
(1-0.2678-0.3726)^2
0.81/(1-0.2678-0.3726)^2
3.82+1.96*sqrt(6.264/200)
3.82-1.96*sqrt(6.264/200)
1.96*sqrt(6.264/200)
sqrt(1.22*0.81/200)
sqrt(1.22*0.81/200)*1.96
1.22*0.81/200
solve(matrix(c(1,0.427,0.427,1),2,2))
solve(matrix(1.15*c(1,0.427,0.427,1),2,2))
solve(matrix(c(1,0.5,0.5,1),2,2))
solve(matrix(c(1,0.5,0.5,1),2,2))/1.2
solve(matrix(c(1,0.427,0.427,1),2,2))/1.15
solve(matrix(c(1,0.5,0.5,1),2,2))/1.2
1.222/200*0.81
4*0.4-2+.4
4*.4
1.6-2
0
20-20*0.81
3.8/0.75
20-20*0.81*0.9
5.42/.75
-0.5*log(0.5,2)
-0.5*log(0.5,2)-0.5*log(0.5,2)
-7/10*4/7*log(7/10,2)
-7/10*4/7*log(7/10,2)-3/10*3/7*log(3/10,2)
-7/10*4/7*log(7/10,2)-3/10*3/7*log(3/10,2)-6/10*3/7*log(6/10,2)
-7/10*4/7*log(7/10,2)-3/10*3/7*log(3/10,2)-6/10*3/7*log(6/10,2)-4/10*3/7*log(4/10,2)
-7/10*4/7*log(7/10,2)-3/10*3/7*log(3/10,2)-6/10*3/7*log(6/10,2)-4/10*3/7*log(4/10,2)-4/7*log(4/7,2)-3/7*log(3/7,2)
-4/7*log(4/7,2)-3/7*log(3/7,2)
-7/10*4/7*log(7/10,2)-3/10*3/7*log(3/10,2)-6/10*3/7*log(6/10,2)-4/10*3/7*log(4/10,2)
-7/10*4/7*log(7/10,2)-3/10*3/7*log(3/10,2)-6/10*3/7*log(6/10,2)-4/10*4/7*log(4/10,2)
-7/10*4/7*log(7/10,2)-4/10*3/7*log(4/10,2)-6/10*3/7*log(6/10,2)-3/10*4/7*log(3/10,2)
04+0.352+.242+.004
(04+0.352+.242+.004)/4
(0.4+0.352+.242+.004)/4
(0.13+0.352+.242+.123)/4
.4/(.4+.13)
.13/(.4+.13)
(0.755+.593+.407+.031)/4
(0.755*.5+.593+.407*1.5+.031*3.5)/4
(0.755*.5+.593+.407*1.5+.031*3.5)/(0.755+.593+.407+.031)
(0.755*(.5-0.946)^2+.593*(1-0.946)^2+.407*(1.5-0.946)^2+.031*(3.5-0.946)^2)/(0.755+.593+.407+.031)
sqrt(0.2682172)
log(1)
log(1)/log(2)
log(2)
63/70
19*40*4
25*40*4
18*40*4
library("ggmap")
library(maptools)
library(maps)
install.packages("ggmap")
install.packages("maptools")
install.packages("maps")
library("ggmap")
library("maptools")
library("maps")
visited <- c("SFO", "Chennai", "London", "Melbourne", "Johannesbury, SA")
ll.visited <- geocode(visited)
rm(list=ls())
visited <- c("SFO", "Chennai", "London", "Melbourne", "Johannesbury, SA")
ll.visited <- geocode(visited)
ll.visited
visit.x <- ll.visited$lon
visit.y <- ll.visited$lat
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=16)
mp <- NULL
mapWorld <- borders("world", colour="gray50", fill="gray50") # create a layer of borders
mp <- ggplot() +   mapWorld
mp <- mp+ geom_point(aes(x=visit.x, y=visit.y) ,color="blue", size=3)
mp
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=16)
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-50, 80), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=16)
map("world", fill=TRUE, col="white", bg="lightblue", ylim=c(-60, 90), mar=c(0,0,0,0))
points(visit.x,visit.y, col="red", pch=16)
?get_map
my.region <- get_map(location = c(50,50))
ggmap(my.region)
my.region <- get_map(location = c(50,50), zoom = 4)
ggmap(my.region)
my.region <- get_map(location = c(30,0), zoom = 4)
ggmap(my.region)
my.region <- get_map(location = c(20,40), zoom = 4)
ggmap(my.region)
my.region <- get_map(location = c(20,40), zoom = 3)
ggmap(my.region)
my.region <- get_map(location = c(20,40), zoom = 6)
ggmap(my.region)
?ggmap
rm(list=ls())
shiny::runApp('D:/Google Drive/Google Drive/My Files/3) Trabalho/7) GitHub/Brazil-Exports-Imports/Learning')
runApp('D:/Google Drive/Google Drive/My Files/3) Trabalho/7) GitHub/Brazil-Exports-Imports/Learning')
runApp('D:/Google Drive/Google Drive/My Files/3) Trabalho/7) GitHub/Brazil-Exports-Imports/Learning')
runApp('D:/Google Drive/Google Drive/My Files/3) Trabalho/7) GitHub/Brazil-Exports-Imports/Learning')
runApp('D:/Google Drive/Google Drive/My Files/3) Trabalho/7) GitHub/Brazil-Exports-Imports/Learning')
?rnorm
runApp('D:/Google Drive/Google Drive/My Files/3) Trabalho/7) GitHub/Brazil-Exports-Imports/Learning')
runApp('D:/Google Drive/Google Drive/My Files/3) Trabalho/7) GitHub/Brazil-Exports-Imports/Learning')
runApp('D:/Google Drive/Google Drive/My Files/3) Trabalho/7) GitHub/Brazil-Exports-Imports/Learning')
rm(list=ls())
getwd()
setwd("D:/Google Drive/Google Drive/My Files/2) Estudos/4) Columbia/3) Classes/4) Fall 2017/1) Applied Data Science/1) GitHub/Fall2017-project2-grp9/doc")
Original.Data <- read.csv("../data/CollegeScorecard_Raw_Data")
Original.Data <- read.csv("../data/CollegeScorecard_Raw_Data/MERGED2014_15_PP.csv")
rm(list=ls())
Original.Data <- read.csv("../data/CollegeScorecard_Raw_Data/MERGED2014_15_PP.csv")
?read.csv
View(Original.Data)
head(names(Original.Data))
paste(data.path, "MERGED2014_15_PP.csv")
data.path <- "../data/CollegeScorecard_Raw_Data/"
paste(data.path, "MERGED2014_15_PP.csv")
paste(data.path, "MERGED2014_15_PP.csv", collapse = "")
paste(data.path, "MERGED2014_15_PP.csv", sep = "")
fields <- read.csv(paste(data.path, "SelectedFields.csv", sep = ""))
View(fields)
type(fields)
is.na(fields[,1])
is.blank(fields[,1])
which(fields[,1] == "")
fields <- fields[!which(fields[,1] == ""),]
fields <- read.csv(paste(data.path, "SelectedFields.csv", sep = ""))
fields <- fields[which(fields[,1] == ""),]
fields <- read.csv(paste(data.path, "SelectedFields.csv", sep = ""))
fields <- fields[-which(fields[,1] == ""),]
fields <- read.csv(paste(data.path, "SelectedFields.csv", sep = ""))
fields <- fields[-which(fields[,1] == ""),]
fields <- fields[-which(fields[,1] == ""),]
fields <- fields[-which(fields[,2] == ""),]
data.path <- "../data/CollegeScorecard_Raw_Data/"
fields <- read.csv(paste(data.path, "SelectedFields.csv", sep = ""))
fields <- fields[-which(fields[,2] == ""),]
fields <- fields[-which(fields[,2] == ""),]
fields <- read.csv(paste(data.path, "SelectedFields.csv", sep = ""))
columns <- fields[,2]
columns <- as.character(fields[,2])
columbs <- columns[!which(columns == "")]
which(columns == "")
!which(columns == "")
columns[!which(columns == "")]
columns <- as.character(fields[,2])
data.path <- "../data/CollegeScorecard_Raw_Data/"
fields <- read.csv(paste(data.path, "SelectedFields.csv", sep = ""))
columns <- as.character(fields[,2])
rm(columbs)
columns[!which(columns == "")]
which(columns == "")
columns == ""
columns[!columns == ""]
columns <- columns[!columns == ""]
columns <- columns[!columns == ""]
columns == ""
!columns == ""
original.data <- read.csv(paste(data.path, "MERGED2014_15_PP.csv", sep = ""), header = T, col.names = columns)
?read.csv
original.data <- read.csv(paste(data.path, "MERGED2014_15_PP.csv", sep = ""), header = T)
work.data <- original.data[,"UNITID"]
original.data <- read.csv(paste(data.path, "MERGED2014_15_PP.csv", sep = ""), header = T)
rm(Original.Data)
work.data <- original.data[,"UNITID"]
?subset
work.data <- subset(original.data, select = "UNITID")
work.data <- subset(original.data, select = UNITID)
View(original.data)
work.data <- subset(original.data, select = OPEID)
View(work.data)
work.data <- subset(original.data, select = columns)
names(original.data[1]) <- "UNITID"
work.data <- subset(original.data, select = columns)
columns <- columns[-1]
work.data <- subset(original.data, select = columns)
View(work.data)
rm(list=ls())
data.path <- "../data/CollegeScorecard_Raw_Data/"
fields <- read.csv(paste(data.path, "SelectedFields.csv", sep = ""))
columns <- as.character(fields[,2])
columns <- columns[!columns == ""]
original.data <- read.csv(paste(data.path, "MERGED2014_15_PP.csv", sep = ""), header = T)
names(original.data[1]) <- "UNITID"
names(original.data)
names(original.data)[1] <- "UNITID"
head(names(original.data))
names(original.data)[1] <- "UNITID"
work.data <- subset(original.data, select = columns)
?write.csv
write.csv(work.data, file = paste(data.path, "WorkData.csv", sep = ""))
write.csv(work.data, file = paste(data.path, "WorkData.csv", sep = ""), row.names = F)
# Chunk 1
data.path <- "../data/CollegeScorecard_Raw_Data/"
#Reads file with fields that are relevant
fields <- read.csv(paste(data.path, "SelectedFields.csv", sep = ""))
#Remove any blank rows
columns <- as.character(fields[,2])
columns <- columns[!columns == ""]
#Reads the entire dataset
original.data <- read.csv(paste(data.path, "MERGED2014_15_PP.csv", sep = ""), header = T)
names(original.data)[1] <- "UNITID"
#Writes a csv file with the selected data
work.data <- subset(original.data, select = columns)
write.csv(work.data, file = paste(data.path, "WorkData.csv", sep = ""), row.names = F)
# Chunk 1
data.path <- "../data/CollegeScorecard_Raw_Data/"
#Reads file with fields that are relevant
fields <- read.csv(paste(data.path, "SelectedFields.csv", sep = ""))
#Remove any blank rows
columns <- as.character(fields[,2])
columns <- columns[!columns == ""]
#Reads the entire dataset
original.data <- read.csv(paste(data.path, "MERGED2014_15_PP.csv", sep = ""), header = T)
names(original.data)[1] <- "UNITID"
#Writes a csv file with the selected data
work.data <- subset(original.data, select = columns)
write.csv(work.data, file = paste(data.path, "WorkData.csv", sep = ""), row.names = F)
